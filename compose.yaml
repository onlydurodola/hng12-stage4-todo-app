version: "3.8"

services:
  # Frontend (Vue.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - AUTH_API_ADDRESS=http://auth-api:8081
      - TODOS_API_ADDRESS=http://todos-api:8082
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`oluwatobiloba.tech`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
    networks:
      - app-network
    depends_on:
      - auth-api
      - todos-api

  # Auth API (Go)
  auth-api:
    build:
      context: ./auth-api
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - AUTH_API_PORT=8081
      - JWT_SECRET=myfancysecret
      - USERS_API_ADDRESS=http://users-api:8083
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-api.rule=Host(`auth.oluwatobiloba.tech`) || PathPrefix(`/auth`)"
      - "traefik.http.routers.auth-api.entrypoints=websecure"
      - "traefik.http.routers.auth-api.tls.certresolver=myresolver"
      - "traefik.http.services.auth-api.loadbalancer.server.port=8081"  # Ensure correct port
    networks:
      - app-network
    depends_on:
      - users-api

  # Todos API (Node.js)
  todos-api:
    build:
      context: ./todos-api
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - TODO_API_PORT=8082
      - JWT_SECRET=myfancysecret
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
      - ZIPKIN_URL=http://zipkin:9411/api/v2/spans
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos-api.rule=Host(`todos.oluwatobiloba.tech`) || PathPrefix(`/todos`)"
      - "traefik.http.routers.todos-api.entrypoints=websecure"
      - "traefik.http.routers.todos-api.tls.certresolver=myresolver"
    networks:
      - app-network
    depends_on:
      - redis-queue

  # Users API (Java/Spring Boot)
  users-api:
    build:
      context: ./users-api
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - SERVER_PORT=8083
      - JWT_SECRET=myfancysecret
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users-api.rule=Host(`users.oluwatobiloba.tech`) || PathPrefix(`/users`)"
      - "traefik.http.routers.users-api.entrypoints=websecure"
      - "traefik.http.routers.users-api.tls.certresolver=myresolver"
    networks:
      - app-network

  # Log Message Processor (Python)
  log-message-processor:
    build:
      context: ./log-message-processor
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    networks:
      - app-network
    depends_on:
      - redis-queue

  # Redis Queue
  redis-queue:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Traefik Reverse Proxy
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"  # Remove in production
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--log.level=DEBUG"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=nowonlywork@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpChallenge.entrypoint=web"
    labels:
      - "traefik.http.middlewares.acme-exclude.stripprefix.prefixes=/.well-known/acme-challenge"
      - "traefik.http.routers.acme-exclude.rule=PathPrefix(`/.well-known/acme-challenge`)"
      - "traefik.http.routers.acme-exclude.entrypoints=web"
      - "traefik.http.routers.acme-exclude.middlewares=acme-exclude@docker"
      - "traefik.http.middlewares.redirect-web-to-websecure.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-web-to-websecure.redirectscheme.permanent=true"
      - "traefik.http.routers.web-to-websecure.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.web-to-websecure.entrypoints=web"
      - "traefik.http.routers.web-to-websecure.middlewares=redirect-web-to-websecure@docker"
    ports:
      - "80:80"
      - "443:443"
      - "8088:8080"  # Traefik dashboard
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app-network

  # Zipkin
  zipkin:
    image: openzipkin/zipkin
    networks:
      - app-network
    ports:
      - "9411:9411"

networks:
  app-network:
    driver: bridge

volumes:
  letsencrypt: